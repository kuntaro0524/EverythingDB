{"ast":null,"code":"var _jsxFileName = \"/home/kuntaro/kundev/everythingDB/00.BINDS-application/web_binds/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport axios from 'axios';\nimport { DisplayApps } from './DisplayApps';\nimport { useEffect, useState } from 'react';\nimport { ChakraProvider } from '@chakra-ui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [conds, setConds] = useState([]);\n  useEffect(() => {\n    axios.get(\"http://localhost:4649/allapp\", {\n      headers: {\n        'Access-Control-Allow-Origin': '*'\n      }\n    }).then(res => {\n      console.log(\"Here done\");\n      setConds(res.data);\n    }).catch(function (error) {\n      console.log(\"ERROR?\");\n      console.log(error.config);\n\n      for (let key of Object.keys(error)) {\n        console.log(key);\n        console.log(error[key]);\n      }\n\n      if (error.response) {\n        // The request was made and the server responded with a status code\n        // that falls out of the range of 2xx\n        console.log(error.response.data);\n        console.log(error.response.status);\n        console.log(error.response.headers);\n      } else if (error.request) {\n        // The request was made but no response was received\n        // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n        // http.ClientRequest in node.js\n        console.log(error.request);\n      } else {\n        // Something happened in setting up the request that triggered an Error\n        console.log('Error', error.message);\n      }\n\n      console.log(error.config);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ChakraProvider, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" BINDS application GUI ver 1.0 \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(DisplayConds, {\n        conds: conds\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"MkcQGEJoU4pPjKzCIXRQCZAsvrk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/kuntaro/kundev/everythingDB/00.BINDS-application/web_binds/src/App.js"],"names":["axios","DisplayApps","useEffect","useState","ChakraProvider","App","conds","setConds","get","headers","then","res","console","log","data","catch","error","config","key","Object","keys","response","status","request","message"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,cAAT,QAA+B,kBAA/B;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdF,IAAAA,KAAK,CAACQ,GAAN,CAAU,8BAAV,EAA0C;AACxCC,MAAAA,OAAO,EAAE;AACP,uCAA+B;AADxB;AAD+B,KAA1C,EAKGC,IALH,CAKQC,GAAG,IAAI;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAN,MAAAA,QAAQ,CAACI,GAAG,CAACG,IAAL,CAAR;AACD,KARH,EASGC,KATH,CASS,UAAUC,KAAV,EAAiB;AACtBJ,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYG,KAAK,CAACC,MAAlB;;AACA,WAAI,IAAIC,GAAR,IAAeC,MAAM,CAACC,IAAP,CAAYJ,KAAZ,CAAf,EAAmC;AACtCJ,QAAAA,OAAO,CAACC,GAAR,CAAYK,GAAZ;AACHN,QAAAA,OAAO,CAACC,GAAR,CAAYG,KAAK,CAACE,GAAD,CAAjB;AACA;;AACM,UAAIF,KAAK,CAACK,QAAV,EAAoB;AAClB;AACA;AACAT,QAAAA,OAAO,CAACC,GAAR,CAAYG,KAAK,CAACK,QAAN,CAAeP,IAA3B;AACAF,QAAAA,OAAO,CAACC,GAAR,CAAYG,KAAK,CAACK,QAAN,CAAeC,MAA3B;AACAV,QAAAA,OAAO,CAACC,GAAR,CAAYG,KAAK,CAACK,QAAN,CAAeZ,OAA3B;AACD,OAND,MAMO,IAAIO,KAAK,CAACO,OAAV,EAAmB;AACxB;AACA;AACA;AACAX,QAAAA,OAAO,CAACC,GAAR,CAAYG,KAAK,CAACO,OAAlB;AACD,OALM,MAKA;AACL;AACAX,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBG,KAAK,CAACQ,OAA3B;AACD;;AACDZ,MAAAA,OAAO,CAACC,GAAR,CAAYG,KAAK,CAACC,MAAlB;AACD,KAhCH;AAiCD,GAlCQ,EAkCP,EAlCO,CAAT;AAoCA,sBACE,QAAC,cAAD;AAAA,2BACA;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,YAAD;AAAc,QAAA,KAAK,EAAEX;AAArB;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GAhDQD,G;;KAAAA,G;AAkDT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport axios from 'axios';\nimport { DisplayApps } from './DisplayApps';\nimport { useEffect, useState } from 'react';\nimport { ChakraProvider } from '@chakra-ui/react';\n\nfunction App() {\n\n  const [conds, setConds] = useState([]);\n\n  useEffect(() => {\n    axios.get(\"http://localhost:4649/allapp\", {\n      headers: {\n        'Access-Control-Allow-Origin': '*',\n      }\n    })\n      .then(res => {\n        console.log(\"Here done\");\n        setConds(res.data);\n      })\n      .catch(function (error) {\n        console.log(\"ERROR?\");\n        console.log(error.config);\n        for(let key of Object.keys(error)) {\n   \t\tconsole.log(key);\n\t\tconsole.log(error[key]);\n\t}\n        if (error.response) {\n          // The request was made and the server responded with a status code\n          // that falls out of the range of 2xx\n          console.log(error.response.data);\n          console.log(error.response.status);\n          console.log(error.response.headers);\n        } else if (error.request) {\n          // The request was made but no response was received\n          // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n          // http.ClientRequest in node.js\n          console.log(error.request);\n        } else {\n          // Something happened in setting up the request that triggered an Error\n          console.log('Error', error.message);\n        }\n        console.log(error.config);\n      });\n  },[]);\n\n  return (\n    <ChakraProvider>\n    <div className=\"App\">\n      <h1> BINDS application GUI ver 1.0 </h1>\n      <DisplayConds conds={conds}/>\n    </div>\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}